View(event_to_travel_combined)
event_to_travel_combined <- event_to_travel
colnames(event_to_travel_combined) <- c("days","search count","confirm count")
event_to_travel_combined_new <- mutate(event_to_travel_combined[which(event_to_travel_combined$days!="NA"),], `Searches` = `search count`/sum(`search count`)*100, `Confirms` = `confirm count`/sum(`confirm count`)*100)
theme_fivethirtyeight <- function(base_size = 13, base_family = "") {
theme_grey(base_size = base_size, base_family = base_family) %+replace%
theme(
# Base elements which are not used directly but inherited by others
line =              element_line(colour = '#DADADA', size = 0.75,
linetype = 1, lineend = "butt"),
rect =              element_rect(fill = "#F0F0F0", colour = "#F0F0F0",
size = 0.5, linetype = 1),
text =              element_text(family = base_family, face = "plain",
colour = "#656565", size = base_size,
hjust = 0.5, vjust = 0.5, angle = 0,
lineheight = 0.9),
# Modified inheritance structure of text element
plot.title =        element_text(size = rel(1.5), family = '' ,
face = 'bold', hjust = -0.05,
vjust = 1.5, colour = '#3B3B3B'),
axis.title.x =      element_text(),
axis.title.y =      element_text(angle=90),
axis.text.x =       element_text(angle=50, vjust=0.5),
# Modified inheritance structure of line element
axis.ticks =        element_line(),
panel.grid.major =  element_line(),
panel.grid.minor =  element_blank(),
# Modified inheritance structure of rect element
plot.background =   element_rect(),
panel.background =  element_rect(),
legend.key =        element_rect(),
# Modifiying legend.position
legend.position = 'bottom',
legend.title=element_blank(),
complete = TRUE
)
}
event_to_travel_confirms <- select(event_to_travel_combined_new, 1,5)
View(event_to_travel_confirms)
event_to_travel_confirms <- select(event_to_travel_combined_new)
View(event_to_travel_confirms)
event_to_travel_confirms <- select(event_to_travel_combined_new,1,2)
View(event_to_travel_confirms)
event_to_travel_confirms <- select(event_to_travel_combined_new,1,2,3)
View(event_to_travel_confirms)
event_to_travel_confirms <- select(event_to_travel_combined_new,1,3)
(ggplot(event_to_travel_confirms, aes(x = days, y =Confirms))
+ geom_bar(stat="identity", fill="#de544a")
+ ggtitle("Event to Travel - Hawaii Confirms")
+ theme(axis.text.x=element_text(angle=50, vjust=0.5))
+ geom_text(aes(label=round(Confirms, digits = 1), hjust=0.5, vjust=-0.5), show_guide=FALSE)
+ scale_x_discrete(limits=c("More than 90 Days Before","71 to 80 Days Before","61 to 70 Days Before","51 to 60 Days Before","41 to 50 Days Before","31 to 40 Days Before","21 to 30 Days Before","13 to 20 Days Before","10 to 12 Days Before","7 to 9 Days Before","4 to 6 Days Before","1 to 3 Days Before","Same Day"))
+ theme_fivethirtyeight()
+ ylab("Percent of Total Events")
+ xlab(""))
View(event_to_travel_confirms)
event_to_travel_combined_new <- mutate(event_to_travel_combined[which(event_to_travel_combined$days!="NA"),], `Searches` = `search count`/sum(`search count`)*100, `Confirms` = `confirm count`/sum(`confirm count`)*100)
View(event_to_travel_combined_new)
event_to_travel_combined_new <- mutate(event_to_travel_combined[which(event_to_travel_combined$days!="NA"),], `Searches` = `search count`/sum(`search count`)*100, `Confirms` = `confirm count`/sum(`confirm count`)*100)
View(event_to_travel_combined_new)
event_to_travel_combined_new <- mutate(event_to_travel_combined[which(event_to_travel_combined$days!="NA"&event_to_travel_combined$confirm count!="NA"),], `Searches` = `search count`/sum(`search count`)*100, `Confirms` = `confirm count`/sum(`confirm count`)*100)
event_to_travel_combined_new <- mutate(event_to_travel_combined[which(event_to_travel_combined$days!="NA"&event_to_travel_combined$`confirm count`!="NA"),], `Searches` = `search count`/sum(`search count`)*100, `Confirms` = `confirm count`/sum(`confirm count`)*100)
View(event_to_travel_combined_new)
View(event_to_travel_combined_new)
event_to_travel <- read.csv("~/Documents/disney_qbr/Dec 2015 Presentation/Disney Hawaii Data/event_to_travel.csv", header=FALSE)
event_to_travel_combined <- event_to_travel
colnames(event_to_travel_combined) <- c("days","search count","confirm count")
event_to_travel_combined_new <- mutate(event_to_travel_combined[which(event_to_travel_combined$days!="NA"&event_to_travel_combined$`confirm count`!="NA"),], `Searches` = `search count`/sum(`search count`)*100, `Confirms` = `confirm count`/sum(`confirm count`)*100)
theme_fivethirtyeight <- function(base_size = 13, base_family = "") {
theme_grey(base_size = base_size, base_family = base_family) %+replace%
theme(
# Base elements which are not used directly but inherited by others
line =              element_line(colour = '#DADADA', size = 0.75,
linetype = 1, lineend = "butt"),
rect =              element_rect(fill = "#F0F0F0", colour = "#F0F0F0",
size = 0.5, linetype = 1),
text =              element_text(family = base_family, face = "plain",
colour = "#656565", size = base_size,
hjust = 0.5, vjust = 0.5, angle = 0,
lineheight = 0.9),
# Modified inheritance structure of text element
plot.title =        element_text(size = rel(1.5), family = '' ,
face = 'bold', hjust = -0.05,
vjust = 1.5, colour = '#3B3B3B'),
axis.title.x =      element_text(),
axis.title.y =      element_text(angle=90),
axis.text.x =       element_text(angle=50, vjust=0.5),
# Modified inheritance structure of line element
axis.ticks =        element_line(),
panel.grid.major =  element_line(),
panel.grid.minor =  element_blank(),
# Modified inheritance structure of rect element
plot.background =   element_rect(),
panel.background =  element_rect(),
legend.key =        element_rect(),
# Modifiying legend.position
legend.position = 'bottom',
legend.title=element_blank(),
complete = TRUE
)
}
event_to_travel_confirms <- select(event_to_travel_combined_new,1,3)
(ggplot(event_to_travel_confirms, aes(x = days, y =Confirms))
+ geom_bar(stat="identity", fill="#de544a")
+ ggtitle("Event to Travel - Hawaii Confirms")
+ theme(axis.text.x=element_text(angle=50, vjust=0.5))
+ geom_text(aes(label=round(Confirms, digits = 1), hjust=0.5, vjust=-0.5), show_guide=FALSE)
+ scale_x_discrete(limits=c("More than 90 Days Before","71 to 80 Days Before","61 to 70 Days Before","51 to 60 Days Before","41 to 50 Days Before","31 to 40 Days Before","21 to 30 Days Before","13 to 20 Days Before","10 to 12 Days Before","7 to 9 Days Before","4 to 6 Days Before","1 to 3 Days Before","Same Day"))
+ theme_fivethirtyeight()
+ ylab("Percent of Total Events")
+ xlab(""))
View(event_to_travel_confirms)
event_to_travel_confirms <- select(event_to_travel_combined_new,1,5)
(ggplot(event_to_travel_confirms, aes(x = days, y =Confirms))
+ geom_bar(stat="identity", fill="#de544a")
+ ggtitle("Event to Travel - Hawaii Confirms")
+ theme(axis.text.x=element_text(angle=50, vjust=0.5))
+ geom_text(aes(label=round(Confirms, digits = 1), hjust=0.5, vjust=-0.5), show_guide=FALSE)
+ scale_x_discrete(limits=c("More than 90 Days Before","71 to 80 Days Before","61 to 70 Days Before","51 to 60 Days Before","41 to 50 Days Before","31 to 40 Days Before","21 to 30 Days Before","13 to 20 Days Before","10 to 12 Days Before","7 to 9 Days Before","4 to 6 Days Before","1 to 3 Days Before","Same Day"))
+ theme_fivethirtyeight()
+ ylab("Percent of Total Events")
+ xlab(""))
event_to_travel_searches <- select(event_to_travel_combined_new, 1,4)
(ggplot(event_to_travel_searches, aes(x = days, y = Searches))
+ geom_bar(stat="identity", fill="#de544a")
+ ggtitle("Event to Travel - Hawaii Searches")
+ theme(axis.text.x=element_text(angle=50, vjust=0.5))
+ geom_text(aes(label=round(Searches, digits = 1), hjust=0.5, vjust=-0.5), show_guide=FALSE)
+ scale_x_discrete(limits=c("More than 90 Days Before","71 to 80 Days Before","61 to 70 Days Before","51 to 60 Days Before","41 to 50 Days Before","31 to 40 Days Before","21 to 30 Days Before","13 to 20 Days Before","10 to 12 Days Before","7 to 9 Days Before","4 to 6 Days Before","1 to 3 Days Before","Same Day"))
+ theme_fivethirtyeight()
+ ylab("Percent of Total Events")
+ xlab(""))
number_in_party <- read.csv("~/Documents/disney_qbr/Dec 2015 Presentation/Disney Hawaii Data/number_in_party.csv", header=FALSE)
colnames(number_in_party) <- c("number","count")
number_in_party_combined_new <- mutate(number_in_party[which(number_in_party$number!="NA"),], `DLR` = count/sum(count)*100)
theme_fivethirtyeight <- function(base_size = 13, base_family = "") {
theme_grey(base_size = base_size, base_family = base_family) %+replace%
theme(
# Base elements which are not used directly but inherited by others
line =              element_line(colour = '#DADADA', size = 0.75,
linetype = 1, lineend = "butt"),
rect =              element_rect(fill = "#F0F0F0", colour = "#F0F0F0",
size = 0.5, linetype = 1),
text =              element_text(family = base_family, face = "plain",
colour = "#656565", size = base_size,
hjust = 0.5, vjust = 0.5, angle = 0,
lineheight = 0.9),
# Modified inheritance structure of text element
plot.title =        element_text(size = rel(1.5), family = '' ,
face = 'bold', hjust = -0.05,
vjust = 1.5, colour = '#3B3B3B'),
axis.title.x =      element_text(),
axis.title.y =      element_text(angle=90),
axis.text.x =       element_text(angle=50, vjust=0.5),
# Modified inheritance structure of line element
axis.ticks =        element_line(),
panel.grid.major =  element_line(),
panel.grid.minor =  element_blank(),
# Modified inheritance structure of rect element
plot.background =   element_rect(),
panel.background =  element_rect(),
legend.key =        element_rect(),
# Modifiying legend.position
legend.position = 'bottom',
legend.title=element_blank(),
complete = TRUE
)
}
# Data plotting ----------------------------------------------------------------
(ggplot(number_in_party_combined_new, aes(x = number, y = `DLR`))
+ geom_bar(stat="identity", fill="#de544a")
+ ggtitle("Number in Party - Hawaii Confirmations ")
+ geom_text(aes(label=round(DLR, digits = 1), hjust=0.5, vjust=-0.5), show_guide=FALSE)
+ theme_fivethirtyeight()
+ ylab("Percent of Total Events")
+ xlab(""))
working_directory <- "~/Documents/BigQuery/tourism_wrap_report_bq"
setwd(working_directory)
source('./helper_functions/read_and_rename.R')
campaign_list <-
read_and_rename(
file = "./campaign_list2.csv", new_colnames = c(
"advertiser_id","advertiser_name","campaign_name","insertion_order_id","start_date","end_date","destination_airports","destination_cities","destination_states","destination_countries"
)
)
for (i in 1:nrow(campaign_list)) {
if (i > nrow(campaign_list)) {
break
} else {
campaign_details <- campaign_list[i,]
advertiser_id <- select(campaign_details, advertiser_id)[[1]]
advertiser_name <- select(campaign_details, advertiser_name)[[1]]
insertion_order_id <- select(campaign_details, insertion_order_id)[[1]]
start_date <- select(campaign_details, start_date)[[1]]
end_date <- select(campaign_details, end_date)[[1]]
destination_airports <- select(campaign_details, destination_airports)[[1]]
destination_cities <- select(campaign_details, destination_cities)[[1]]
destination_states <- select(campaign_details, destination_states)[[1]]
destination_countries <- select(campaign_details, destination_countries)[[1]]
# Read in helper functions and load libraries
# --------------------------------------------------------------------
source(file = "./helper_functions/load_libraries.r")
# BigQuery setup
# --------------------------------------------------------------------
source(file = "./settings/bigquery_settings.r")
# Read in impression query and post-impression travel query
# --------------------------------------------------------------------
source(file = "./bq_files/queries/campaign_impressions.r")
source(file = "./bq_files/queries/post_impression_travel_events.r")
# Run impression and post-impression travel events jobs
# --------------------------------------------------------------------
campaign_impressions_job <-
insert_query_job(
campaign_impressions_sql, project, destination_table = campaign_impressions_destination_table, default_dataset = default_dataset
)
campaign_impressions_job <-
wait_for(
campaign_impressions_job
)
campaign_impressions_dest <-
campaign_impressions_job$configuration$query$destinationTable
post_impression_travel_events_job <-
insert_query_job(
post_impression_travel_events_sql, project, destination_table = destination_table, default_dataset = default_dataset
)
post_impression_travel_events_job <-
wait_for(
post_impression_travel_events_job
)
dest <-
post_impression_travel_events_job$configuration$query$destinationTable
# Read in the other queries using the dest object destination table information
# --------------------------------------------------------------------
source(file = "./bq_files/get_queries.r")
# Run aggregation queries and get results
# --------------------------------------------------------------------
duration_of_stay_results <-
query_exec(duration_of_stay_sql, project = project, destination_table = NULL)
hotel_room_nights_results <-
query_exec(hotel_room_nights_sql, project = project, destination_table = NULL)
events_by_type_results <-
query_exec(events_by_type_sql, project = project, destination_table = NULL)
event_to_travel_results <-
query_exec(event_to_travel_sql, project = project, destination_table = NULL)
number_in_party_results <-
query_exec(number_in_party_sql, project = project, destination_table = NULL)
number_of_travelers_results <-
query_exec(number_of_travelers_sql, project = project, destination_table = NULL)
search_confirm_originations_results <-
query_exec(search_confirm_originations_sql, project = project, destination_table = NULL)
searches_by_departure_date_results <-
query_exec(searches_by_departure_date_sql, project = project, destination_table = NULL)
confirms_by_departure_date_results <-
query_exec(confirms_by_departure_date_sql, project = project, destination_table = NULL)
post_impression_beacon_events_results <-
query_exec(post_impression_beacon_events_sql, project = project, destination_table = NULL)
unique_travelers_results <-
query_exec(unique_travelers_sql, project = project, destination_table = NULL)
# Create the data folder and save the query results as CSVs in that folder
# --------------------------------------------------------------------
source(file = "./bq_files/save_query_results.r")
# Delete the post-impression travel events table and cleanup objects
# --------------------------------------------------------------------
source(file = "./bq_files/cleanup.r")
# Create the zip folder and move to the wrap report queue where the
# report is built.
# --------------------------------------------------------------------
source(file = "./bq_files/build_zip.r")
}
}
View(event_to_travel_results)
View(confirms_by_departure_date_results)
View(duration_of_stay_results)
View(confirms_by_departure_date_results)
View(number_of_travelers_results)
View(number_in_party_results)
View(campaign_details)
strplit(insertion_order_id, split = ",")[2]
strplit(insertion_order_id, split = ",")
strsplit(insertion_order_id, split = ",")[2]
strsplit(insertion_order_id, split = ",")
strsplit(insertion_order_id, ",")
strsplit(as.character(insertion_order_id), ",")
strsplit(as.character(insertion_order_id), ",")[2]
strsplit(as.character(insertion_order_id), ",")[1]
strsplit(as.character(insertion_order_id), ",")[[1]]
strsplit(as.character(insertion_order_id), ",")[[1]][2]
test <- 1766541
strsplit(as.character(test), ",")[[1]][2]
strsplit(as.character(test), ",")[[1]][1]
strsplit(as.character(insertion_order_id), ",")[[1]][1]
as.numeric(strsplit(as.character(insertion_order_id), ",")[[1]][1])
typeof(insertion_order_id)
as.integer(strsplit(as.character(insertion_order_id), ",")[[1]][1])
test <- fromJSON(getURL("https://api.moat.com/1/stats.json?start=20151201&end=20151207&level1=123456&columns=level1,impressions_analyzed,in_view_percent,active_in_view_time,universal_interactions_percent,clicks_percent", userpwd="sojern_api@moat.com:&2UXEgaxa", httpauth = 1L))
test
test <- fromJSON(getURL("https://api.moat.com/1/stats.json?start=20151201&end=20151207&level1=619768&columns=level1,screenshots", userpwd="sojern_api@moat.com:&2UXEgaxa", httpauth = 1L))
test
test <- fromJSON(getURL("http://api.moat.com/1/creatives.json?start=20151201&end=20151207&level1=652751&x_y=300_250&columns=screenshot", userpwd="sojern_api@moat.com:&2UXEgaxa", httpauth = 1L))
test
test$results[[1]]$screenshot_url
test$results[[1]]$heatmaps$clicks
test$results[[2]]$heatmaps$clicks
setwd("~/Documents/BigQuery/qbr_automation")
setwd("~/Documents/BigQuery/tourism_wrap_report_bq")
test <- fromJSON(getURL("http://api.moat.com/1/creatives.json?start=20151201&end=20151207&level1=652751&x_y=300_250&columns=screenshot", userpwd="sojern_api@moat.com:&2UXEgaxa", httpauth = 1L))
test
test[[1]]
test
test$results
test$results[[1]]
test$results[[1]]$screenshot_url
today
today()
library("lubridate", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
today()
today() %>%
gsub("-","")
date <- today()
gsub("-","", as.character(date))
gsub("-","", as.character(today()))
api_start_date <- 20150101
api_end_date <- gsub("-","", as.character(today()))
moat_api_url <- paste0("http://api.moat.com/1/creatives.json?start=",api_start_date,"&end=",api_end_date,"&level1=",io_id,"&x_y=300_250&columns=screenshot")
300x250_creative <- fromJSON(getURL("http://api.moat.com/1/creatives.json?start=20151201&end=20151207&level1=652751&x_y=300_250&columns=screenshot", userpwd="sojern_api@moat.com:&2UXEgaxa", httpauth = 1L))
300x250_creative$results[[1]]$screenshot_url
cat(api_end_date)
api_start_date <- 20150101
api_end_date <- cat(gsub("-","", as.character(today())))
io_id <-
moat_api_url <- paste0("http://api.moat.com/1/creatives.json?start=",api_start_date,"&end=",api_end_date,"&level1=",io_id,"&x_y=300_250&columns=screenshot")
300x250_creative <- fromJSON(getURL("http://api.moat.com/1/creatives.json?start=20151201&end=20151207&level1=652751&x_y=300_250&columns=screenshot", userpwd="sojern_api@moat.com:&2UXEgaxa", httpauth = 1L))
300x250_creative$results[[1]]$screenshot_url
api_start_date <- 20150101
api_end_date <- cat(gsub("-","", as.character(today())))
io_id <- 652751
moat_api_url <- paste0("http://api.moat.com/1/creatives.json?start=",api_start_date,"&end=",api_end_date,"&level1=",io_id,"&x_y=300_250&columns=screenshot")
300x250_creative <- fromJSON(getURL(moat_api_url, userpwd="sojern_api@moat.com:&2UXEgaxa", httpauth = 1L))
300x250_creative$results[[1]]$screenshot_url
moat_api_url
api_start_date <- 20150101
api_end_date <- cat(gsub("-","", as.character(today())))
io_id <- 652751
moat_api_url <- paste0("http://api.moat.com/1/creatives.json?start=",api_start_date,"&end=",api_end_date,"&level1=",io_id,"&x_y=300_250&columns=screenshot")
creative <- fromJSON(getURL(moat_api_url, userpwd="sojern_api@moat.com:&2UXEgaxa", httpauth = 1L))
creative$results[[1]]$screenshot_url
x <- paste0(20150101)
x
moat_api_url <- paste0("http://api.moat.com/1/creatives.json?start=",api_start_date,"&end=",api_end_date,"&level1=",io_id,"&columns=screenshot")
creative_screenshot <- rjson::fromJSON(RCurl::getURL(moat_api_url, userpwd="sojern_api@moat.com:&2UXEgaxa", httpauth = 1L))
rjson::fromJSON(RCurl::getURL(moat_api_url, userpwd="sojern_api@moat.com:&2UXEgaxa", httpauth = 1L))
creative_screenshot$results[[1]]$screenshot_url
library("RForcecom", lib.loc="~/Library/R/3.2/library")
username <- "brian.smith@sojern.com"
password <- "-F5nMGz9MNdMGKW9CFqNxmTsHeB53A5"
instanceURL <- "https://na5.salesforce.com/"
apiVersion <- "25.0"
session <- rforcecom.login(username, password, instanceURL, apiVersion)
soqlQuery <- "SELECT Advertiser__c, Name, DBM_Insertion_Order_ID__c, TURN_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='brian.smith@sojern.com'"
rforcecom.query(session, soqlQuery)
username <- "brian.smith@sojern.com"
password <- "-F5nMGz9MNdMGKW9CFqNxmTsHeB53A5"
instanceURL <- "https://na5.salesforce.com/"
apiVersion <- "25.0"
session <- rforcecom.login(username, password, instanceURL, apiVersion)
soqlQuery <- "SELECT Id, Advertiser__c, Name, DBM_Insertion_Order_ID__c, TURN_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='brian.smith@sojern.com'"
rforcecom.query(session, soqlQuery)
session <- rforcecom.login(username, password, instanceURL, apiVersion)
username <- "brian.smith@sojern.com"
password <- "-F5nMGxKdyXjevzf05JnpeIKoWz7vv"
instanceURL <- "https://na5.salesforce.com/"
apiVersion <- "25.0"
session <- rforcecom.login(username, password, instanceURL, apiVersion)
username <- "brian.smith@sojern.com"
password <- "-F5nMGxKdyXjevzf05JnpeIKoWz7vv"
instanceURL <- "https://na5.salesforce.com/"
apiVersion <- "27.0"
session <- rforcecom.login(username, password, instanceURL, apiVersion)
username <- "brian.smith@sojern.com"
password <- "-F5nMGxKdyXjevzf05JnpeIKoWz7vv"
instanceURL <- "https://na5.salesforce.com/"
apiVersion <- "25.0"
session <- rforcecom.login(username, password, instanceURL, apiVersion)
soqlQuery <- "SELECT Id, Advertiser__c, Name, DBM_Insertion_Order_ID__c, TURN_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='brian.smith@sojern.com'"
rforcecom.query(session, soqlQuery)
username <- "brian.smith@sojern.com"
password <- "-F5nMGxKdyXjevzf05JnpeIKoWz7vv"
instanceURL <- "https://na5.salesforce.com/"
apiVersion <- "25.0"
session <- rforcecom.login(username, password, instanceURL, apiVersion)
username <- "brian.smith@sojern.com"
password <- "Olocryno1bns!lDwh2v4nwPNza9AkdZsdpRqs"
instanceURL <- "https://na5.salesforce.com/"
apiVersion <- "25.0"
session <- rforcecom.login(username, password, instanceURL, apiVersion)
username <- "brian.smith@sojern.com"
password <- "Olocryno1bns!W2xT5R2GeqWyBjRo831ZfJJAm"
instanceURL <- "https://na5.salesforce.com/"
apiVersion <- "25.0"
session <- rforcecom.login(username, password, instanceURL, apiVersion)
username <- "brian.smith@sojern.com"
password <- "Olocryno1bns!W2xT5R2GeqWyBjRo831ZfJJAm"
instanceURL <- "https://na5.salesforce.com/"
apiVersion <- "25.0"
session <- rforcecom.login(username, password, instanceURL, apiVersion)
username <- "brian.smith@sojern.com"
password <- "Olocryno1bns!lDwh2v4nwPNza9AkdZsdpRqs"
instanceURL <- "https://na5.salesforce.com/"
apiVersion <- "25.0"
session <- rforcecom.login(username, password, instanceURL, apiVersion)
username <- "brian.smith@sojern.com"
password <- "Olocryno1bns!lDwh2v4nwPNza9AkdZsdpRqs"
instanceURL <- "https://login.salesforce.com/"
apiVersion <- "25.0"
session <- rforcecom.login(username, password, instanceURL, apiVersion)
soqlQuery <- "SELECT Id, Advertiser__c, Name, DBM_Insertion_Order_ID__c, TURN_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='brian.smith@sojern.com'"
rforcecom.query(session, soqlQuery)
soqlQuery <- "SELECT Id, Advertiser__c, Name, DBM_Insertion_Order_ID__c, TURN_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com'"
rforcecom.query(session, soqlQuery)
soqlQuery <- "SELECT Id, Advertiser__c, Name, DBM_Insertion_Order_ID__c, TURN_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Start_Date__c <= '2015-12-13' AND End_Date__c >= '2015-12-13"
rforcecom.query(session, soqlQuery)
soqlQuery <- "SELECT Id, Advertiser__c, Name, DBM_Insertion_Order_ID__c, TURN_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com'"
rforcecom.query(session, soqlQuery)
soqlQuery <- "SELECT Id, Advertiser__c, Name, DBM_Insertion_Order_ID__c, TURN_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
rforcecom.query(session, soqlQuery)
soqlQuery <- "SELECT Id, Advertiser__c, Name, DBM_Insertion_Order_ID__c, TURN_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c, Primary_Destination__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
rforcecom.query(session, soqlQuery)
soqlQuery <- "SELECT Id, Advertiser__c, Name, DBM_Insertion_Order_ID__c, TURN_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c, Primary_Destination__c, Destination_Cities__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
rforcecom.query(session, soqlQuery)
soqlQuery <- "SELECT Id, Advertiser__c, Name, DBM_Insertion_Order_ID__c, TURN_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c, Primary_Destination__c, Destination_Cities__c, Average_Spend_per_Traveler__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
rforcecom.query(session, soqlQuery)
soqlQuery <- "SELECT Id, Advertiser__c, Name, DBM_Insertion_Order_ID__c, TURN_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c, Primary_Destination__c, Destination_Cities__c, Average_Spend_per_Traveler__c, Destination_Airports__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
rforcecom.query(session, soqlQuery)
soqlQuery <- "SELECT Id, Advertiser__c, Name, DBM_Insertion_Order_ID__c, TURN_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c, Primary_Destination__c, Destination_Cities__c, Average_Spend_per_Traveler__c, Desination_Airports__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
rforcecom.query(session, soqlQuery)
soqlQuery <- "SELECT Id, Advertiser__c, Name, DBM_Insertion_Order_ID__c, TURN_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c, Primary_Destination__c, Destination_Cities__c, Average_Spend_per_Traveler__c, Desination_Airports__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
sf_query <- rforcecom.query(session, soqlQuery)
sf_query[,Desination_Airports__c]
sf_query[,`Desination_Airports__c`]
sf_query[]
View(sf_query)
sf_query[,4]
sf_query[,"Desination_Airports__c"]
cat(sf_query[,"Desination_Airports__c"])
paste0(sf_query[,"Desination_Airports__c"])
noquotes(paste0(sf_query[,"Desination_Airports__c"]))
noquote(paste0(sf_query[,"Desination_Airports__c"]))
soqlQuery <- "SELECT Id, Advertiser__c, Name, DBM_Insertion_Order_ID__c, DBM_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c, Primary_Destination__c, Destination_Cities__c, Average_Spend_per_Traveler__c, Desination_Airports__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
sf_query <- rforcecom.query(session, soqlQuery)
soqlQuery <- "SELECT Id, Advertiser__c, Name, DBM_Insertion_Order_ID__c, TURN_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c, Primary_Destination__c, Destination_Cities__c, Average_Spend_per_Traveler__c, Desination_Airports__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
sf_query <- rforcecom.query(session, soqlQuery)
username <- "brian.smith@sojern.com"
password <- "Olocryno1bns!lDwh2v4nwPNza9AkdZsdpRqs"
instanceURL <- "https://login.salesforce.com/"
apiVersion <- "25.0"
session <- rforcecom.login(username, password, instanceURL, apiVersion)
soqlQuery <- "SELECT Id, Advertiser__c, Name, DBM_Insertion_Order_ID__c, TURN_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c, Primary_Destination__c, Destination_Cities__c, Average_Spend_per_Traveler__c, Desination_Airports__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
sf_query <- rforcecom.query(session, soqlQuery)
sf_query
View(sf_query)
username <- "brian.smith@sojern.com"
password <- "Olocryno1bns!lDwh2v4nwPNza9AkdZsdpRqs"
instanceURL <- "https://login.salesforce.com/"
apiVersion <- "25.0"
session <- rforcecom.login(username, password, instanceURL, apiVersion)
soqlQuery <- "SELECT Id, Advertiser__c, Name, DBM_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c, Primary_Destination__c, Destination_Cities__c, Average_Spend_per_Traveler__c, Desination_Airports__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
sf_query <- rforcecom.query(session, soqlQuery)
username <- "brian.smith@sojern.com"
password <- "Olocryno1bns!lDwh2v4nwPNza9AkdZsdpRqs"
instanceURL <- "https://login.salesforce.com/"
apiVersion <- "25.0"
session <- rforcecom.login(username, password, instanceURL, apiVersion)
soqlQuery <- "SELECT Id, Account_Name__c, Name, DBM_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c, Primary_Destination__c, Destination_Cities__c, Average_Spend_per_Traveler__c, Desination_Airports__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
sf_query <- rforcecom.query(session, soqlQuery)
soqlQuery <- "SELECT Id, Account_Name, Name, DBM_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c, Primary_Destination__c, Destination_Cities__c, Average_Spend_per_Traveler__c, Desination_Airports__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
sf_query <- rforcecom.query(session, soqlQuery)
soqlQuery <- "SELECT Id, Account_name, Name, DBM_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c, Primary_Destination__c, Destination_Cities__c, Average_Spend_per_Traveler__c, Desination_Airports__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
sf_query <- rforcecom.query(session, soqlQuery)
soqlQuery <- "SELECT Id, Account_name__c, Name, DBM_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c, Primary_Destination__c, Destination_Cities__c, Average_Spend_per_Traveler__c, Desination_Airports__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
sf_query <- rforcecom.query(session, soqlQuery)
soqlQuery <- "SELECT Id, Account, Name, DBM_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c, Primary_Destination__c, Destination_Cities__c, Average_Spend_per_Traveler__c, Desination_Airports__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
sf_query <- rforcecom.query(session, soqlQuery)
soqlQuery <- "SELECT Id, Account__c, Name, DBM_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c, Primary_Destination__c, Destination_Cities__c, Average_Spend_per_Traveler__c, Desination_Airports__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
sf_query <- rforcecom.query(session, soqlQuery)
soqlQuery <- "SELECT Id, Advertiser__c, Name, DBM_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c, Primary_Destination__c, Destination_Cities__c, Average_Spend_per_Traveler__c, Desination_Airports__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
sf_query <- rforcecom.query(session, soqlQuery)
sf_query
soqlQuery <- "SELECT Id, Advertiser_Name__c, Name, DBM_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c, Primary_Destination__c, Destination_Cities__c, Average_Spend_per_Traveler__c, Desination_Airports__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
sf_query <- rforcecom.query(session, soqlQuery)
soqlQuery <- "SELECT Id, Advertiser__c, Name, DBM_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c, Primary_Destination__c, Destination_Cities__c, Average_Spend_per_Traveler__c, Desination_Airports__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
sf_query <- rforcecom.query(session, soqlQuery)
soqlQuery <- "SELECT * FROM Account"
sf_query <- rforcecom.query(session, soqlQuery)
soqlQuery <- "SELECT Id, Advertiser__c, Name, DBM_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c, Primary_Destination__c, Destination_Cities__c, Average_Spend_per_Traveler__c, Desination_Airports__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
sf_query <- rforcecom.query(session, soqlQuery)
soqlQuery <- "SELECT Id, Account, Name, DBM_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c, Primary_Destination__c, Destination_Cities__c, Average_Spend_per_Traveler__c, Desination_Airports__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
sf_query <- rforcecom.query(session, soqlQuery)
soqlQuery <- "SELECT Id, Advertiser__c, Name, DBM_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c, Primary_Destination__c, Destination_Cities__c, Average_Spend_per_Traveler__c, Desination_Airports__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
sf_query <- rforcecom.query(session, soqlQuery)
soqlQuery <- "SELECT Id, Advertiser_ID__c, Name, DBM_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c, Primary_Destination__c, Destination_Cities__c, Average_Spend_per_Traveler__c, Desination_Airports__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
sf_query <- rforcecom.query(session, soqlQuery)
View(sf_query)
soqlQuery <- "SELECT Id, Advertiser_name__c, Name, DBM_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c, Primary_Destination__c, Destination_Cities__c, Average_Spend_per_Traveler__c, Desination_Airports__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
sf_query <- rforcecom.query(session, soqlQuery)
soqlQuery <- "SELECT Id, Advertisername__c, Name, DBM_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c, Primary_Destination__c, Destination_Cities__c, Average_Spend_per_Traveler__c, Desination_Airports__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
sf_query <- rforcecom.query(session, soqlQuery)
soqlQuery <- "SELECT Id, Advertiser__c, Name, DBM_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c, Primary_Destination__c, Destination_Cities__c, Average_Spend_per_Traveler__c, Desination_Airports__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
sf_query <- rforcecom.query(session, soqlQuery)
View(sf_query)
soqlQuery <- "SELECT Id, Account, Name, DBM_Insertion_Order_ID__c, Start_Date__c, End_Date__c, Account_Manager__c, Campaign_Objectives__c, Primary_Destination__c, Destination_Cities__c, Average_Spend_per_Traveler__c, Desination_Airports__c FROM Opportunity WHERE Vertical__c ='Tourism' AND Account_Manager_Email__c ='addie.grosserode@sojern.com' AND Name = 'Missouri T_STP Display_STP'"
sf_query <- rforcecom.query(session, soqlQuery)
savehistory("~/Documents/BigQuery/tourism_wrap_report_bq/work_history_save.Rhistory")
